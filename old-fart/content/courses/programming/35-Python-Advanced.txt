---
title: "Python für Fortgeschrittene"
target_name: course-prog-python-advanced

tags: ['linux', 'kurs', 'schulung', 'programmieren', 'python']

context: course
course_duration: 2
course_type: inhouse

menu_order: 35
---

Über den grundlegenden Sprachumfang (siehe Schulung <%=
link_to_name('Python Grundlagen', 'course-prog-python-basics') %>)
hinaus bietet Python eine Reihe von Möglichkeiten, die dem Programmier
das Handwerk erleichtern --- seien es Werkzeuge wie zum Beispiel ein
Unittest-Framework, oder Sprachmittel, um komplexe Aufgaben einfacher
zu lösen.

Zielpublikum
============

Der Kurs richtet sich an alle Programmierer, die bereits Teile ihres
Aufgabenbereichs in Python lösen --- und mehr damit machen möchten
ohne sich zu verrennen.

Kursinhalt
==========

* **Objektorientierte Programmierung** ist in Python genauso möglich
  wie in vielen anderen Sprachen --- und ist auch unerlässlich, will
  man große und komplexe Programme verstehbar halten. Hier wird das
  Handwerk erklärt und auch auf _Objektorientiertes Design_ eingegangen.
  * _Konstruktoren_
  * _Memberzugriff_
  * _Vererbung_
  * _Exceptions_
  * _Das Python Objektmodell_
* **Das Modulkonzept**. Das `import` Statement ist für den
  Programmierer der Einsprungspunkt zur Wiederverwendung. Hier werden
  ein paar Details vorgestellt ...
  * _Module und Packages_: was ist das und wie kann ich selbst welche
    erstellen?
  * _Lokale Imports_: wie verschmutze ich nicht den globalen Namespace?
* **Grössere Programme und Unit Testing**. Werden Programme größer und
  fürchtet man sich vor jeder Änderung vor neuen Fehlern, braucht man
  * _Programmstruktur_
  * _Unittests_
  * _Installation von Paketen_
* **Generatoren**. In Python, wie in vielen anderen Sprachen, ist das
  Iterieren über eine existierende Menge an Daten ein häufiges
  Idiom. Python bietet Sprachwerkzeuge, die es erlauben, sehr einfach
  über beliebige Datenmengen zu iterieren --- selbst wenn diese noch
  nicht existieren.
* **Verschiedene ausgewählte Themen**.
  * _Interpreteraufruf_ mittels `exec`
  * _Context Managers_: das `with` Statement
  * _Dekoratoren_
  * _Regular Expressions_
  * _Verschiedene ausgewählte Module aus der Python Standard Library_

Empfohlene Vorkenntnisse
========================

* Grundlegende Pythonkenntnisse, wie sie zum Beispiel <%=
  link_to_name('hier', 'course-prog-python-basics') %> vermittelt
  werden.

