#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can't match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. "/about/" for the file
#   "content/about.html"). To select all children, grandchildren, ... of an
#   item, use the pattern "/about/*/"; "/about/*" will also select the parent,
#   because "*" matches zero or more characters.

# don't filter or layout style sheets
compile '/3column/' do
end

compile '/sitemap_xml/' do
  filter :erb
end

compile '*' do
  unless item.binary? then
    filter :erb
    case item[:extension]
    when 'txt' then
      filter :encode_umlauts
      filter :kramdown
    end      
    layout '3column'

    # commented out for the time being. it somehow garbles HTML
    # entities raquo, nbsp etc.

    # filter :relativize_paths, :type => :html     
  end
end

route '/3column/' do
  '/3column.css'
end

route '/htaccess/' do
  raise "What\'s this?" unless item[:extension] == 'dotfile'
  '/.htaccess'
end

route '/errors/404/' do
  '/errors/404.html'
end

# redirect toplevel access to /de/ language tree. the redirect page
# cannot be named index.html in the source (this name is already taken
# by the "virtual" root page in the language), so we have to route it
# into that place.
route '/redirect/' do
  '/index.html'
end

route '*' do
  if item.binary?
    # binary item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # for now (until proper multilanguage is in place) all regular
    # pages go to the /de/ language tree.
    '/de' + item.identifier + 'index.html'
  end
end

layout '*', :erb
